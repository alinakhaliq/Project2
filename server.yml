Description: >
    High Availability Web Application Server yaml.

Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resources
        Type: String
Resources:
    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: HTTP traffic allowed to Load Balancer
          VpcId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: Allow HTTP traffic to the web servers and local SSH access
          VpcId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0

    ProfileWithRolesForOurApp:
        Type: AWS::IAM::InstanceProfile
        Properties: 
          Roles:
            - UdacityS3ReadOnlyEC2         

    WebAppAutoScalingLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              sudo apt-get update -y
              sudo apt-get install apache2 -y
              sudo systemctl start apache2.service  
              cd /var/www/html
              echo "It works! Udagram, Udacity" > index.html
          ImageId: ami-0e472ba40eb589f49 #ubutu 18
          IamInstanceProfile: !Ref ProfileWithRolesForOurApp
          SecurityGroups:
          - Ref: WebServerSecGroup
          InstanceType: t3.small
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'

    WebServerAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier:
          - Fn::ImportValue: 
              !Sub "${EnvironmentName}-PRIV-NETS"
          LaunchConfigurationName:
            Ref: WebAppAutoScalingLaunchConfig
          MinSize: '4'
          MaxSize: '10'
          TargetGroupARNs:
          - Ref: WebServerTargetGroup

    WebServerTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 8
          HealthyThresholdCount: 2
          Port: 80
          Protocol: HTTP
          UnhealthyThresholdCount: 5
          VpcId: 
            Fn::ImportValue:
              Fn::Sub: "${EnvironmentName}-VPCID"

    WebAppLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Subnets:
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
          SecurityGroups:
          - Ref: LBSecGroup
          
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
          DefaultActions:
          - Type: forward
            TargetGroupArn:
              Ref: WebServerTargetGroup
          LoadBalancerArn:
            Ref: WebAppLoadBalancer
          Port: '80'
          Protocol: HTTP
    ApplicationLoadBalancerListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
          Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebServerTargetGroup'
          Conditions:
          - Field: path-pattern
            Values: [/]
          ListenerArn: !Ref 'Listener'
          Priority: 1
Outputs:
  WebAppLoadBalancerURL:
    Description: Load Balancer URL
    Value: !Join ["", ["http://", !GetAtt WebAppLoadBalancer.DNSName,]]
    Export:
      Name: !Sub ${EnvironmentName}-DNS-NAME